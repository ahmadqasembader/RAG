[('rfc7509_txt', 'Internet Engineering Task Force (IETF) R. Huang Request for Comments: 7509 Huawei Category: Standards Track V. Singh ISSN: 2070-1721 Aalto University May 2015 RTP Control Protocol (RTCP) Extended Report (XR) for Post-Repair Loss Count Metrics Abstract This document defines an RTP Control Protocol (RTCP) Extended Report (XR) block that allows reporting of a post-repair loss count metric for a range of RTP applications. In addition another metric repaired loss count is also introduced in this report block for calculating the pre-repair loss count when needed so that the RTP sender or a third-party entity is able to evaluate the effectiveness of the repair methods used by the system. Status of This Memo This is an Internet Standards Track document. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741. Information about the current status of this document any errata and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7509. Copyright Notice Copyright (c) 2015 IETF Trust and the persons identified as the document authors. All rights reserved. This document is subject to BCP 78 and the IETF Trust\'s Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License. Singh & Huang Standards Track [Page 1] RFC 7509 Post-Repair Non-RLE Loss Count May 2015 Table of Contents 1. Introduction ....................................................2 2. Terminology .....................................................3 3. Post-Repair Loss Count Metrics Report Block .....................3 3.1. Report Block Structure .....................................4 3.2. Example Usage ..............................................5 4. SDP Signaling ...................................................6 4.1. SDP rtcp-xr-attrib Attribute Extension .....................6 4.2. Offer/Answer Usage .........................................7 5. Security Considerations .........................................7 6. IANA Considerations .............................................7 6.1. New RTCP XR Block Type Value ...............................7 6.2. New RTCP XR SDP Parameter ..................................7 6.3. Contact Information for Registrations ......................7 7. References ......................................................8 7.1. Normative References .......................................8 7.2. Informative References .....................................9 Appendix A. Metrics Represented Using the Template from RFC 6390 ..10 Acknowledgments ...................................................11 Authors\' Addresses ................................................11 1. Introduction RTCP Sender Reports (SRs) / Receiver Reports (RRs) [RFC3550] contain some rough statistics about the data received from the particular source indicated in that block. One of them is the cumulative number of packets lost which is called the pre-repair loss metric in this document. This metric conveys information regarding the total number of RTP data packets that have been lost since the beginning of the RTP session. However this metric is measured on the media stream before any loss- repair mechanism e.g. retransmission [RFC4588] or Forward Error Correction (FEC) [RFC5109] is applied. Using a repair mechanism usually results in recovering some or all of the lost packets. The recovery process does not reduce the values reported by the two loss metrics in RTCP RR [RFC3550] -- namely the fraction lost and the cumulative loss. Hence the sending endpoint cannot infer the performance of the repair mechanism based on the aforementioned metrics in [RFC3550]. Consequently [RFC5725] specifies a post-repair loss Run-Length Encoding (RLE) XR report block to address this issue. The sending endpoint is able to infer which packets were repaired from the RLE report block but the reporting overhead for the packet-by-packet report block is higher compared to other report blocks. Singh & Huang Standards Track [Page 2] RFC 7509 Post-Repair Non-RLE Loss Count May 2015 When applications use multiple XR blocks the endpoints may require more concise reporting to save bandwidth. This document defines a new XR block type to augment those defined in [RFC3611] and complement the report block defined in [RFC5725] for use in a range of RTP applications. This new block type reports the post-repair loss count metric which records the number of primary source RTP packets that are still lost after applying one or more loss-repair mechanisms. In addition another metric repaired loss count is also introduced in this report block for calculating the pre-repair loss count during this range so that the RTP sender or a third-party entity is able to evaluate the effectiveness of the repair methods used by the system. The metrics defined in this document are packet level rather than slice/picture level; this means the partial recovery of a packet will not be regarded as a repaired packet. The metrics defined in this document belong to the class of transport-related metrics defined in [RFC6792] and are specified in accordance with the guidelines in [RFC6390] and [RFC6792]. These metrics are applicable to any RTP application especially those that use loss-repair mechanisms. 2. Terminology The key words "MUST" "MUST NOT" "REQUIRED" "SHALL" "SHALL NOT" "SHOULD" "SHOULD NOT" "RECOMMENDED" "MAY" and "OPTIONAL" in this document are to be interpreted as described in [KEYWORDS]. primary source RTP packet: The original RTP packet sent from the RTP sender for the first time. A lost primary source RTP packet may be repaired by some other RTP packets used in repair mechanisms like FEC or retransmission. 3. Post-Repair Loss Count Metrics Report Block This block reports the number of packets lost after applying repair mechanisms (e.g. FEC). It complements the RTCP XR metrics defined in [RFC5725]. As noted in [RFC5725] ambiguity may occur when comparing this metric with a pre-repair loss metric reported in an RTCP SR/RR i.e. some packets were not repaired in the current RTCP interval but they may be repaired later. Therefore this block uses a begin sequence number and an end sequence number to explicitly indicate the actual sequence number range reported by this RTCP XR. Accordingly only packets that have no further chance of being repaired and that have been repaired are included in this report block. Singh & Huang Standards Track [Page 3] RFC 7509 Post-Repair Non-RLE Loss Count May 2015 3.1. Report Block Structure The Post-Repair Loss Count Metrics Report Block has the following format: 0 1 2 3 4 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | BT=33 | Reserved | Block length = 4 | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | SSRC of Source | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | begin_seq | end_seq | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Post-repair loss count | Repaired loss count | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ Block Type (BT): 8 bits A Post-Repair Loss Count Metrics Report Block is identified by the constant 33. Reserved: 8 bits These bits are reserved for future use. They MUST be set to zero by senders and ignored by receivers (see Section 4.2 of [RFC6709]). Block length: 16 bits This field is in accordance with the definition in [RFC3611]. In this report block it MUST be set to 4. The block MUST be discarded if the block length is set to a different value. SSRC of source: 32 bits As defined in Section 4.1 of [RFC3611]. begin_seq: 16 bits The first sequence number that this block reports on. It can remain fixed when calculating metrics over several RTCP reporting intervals. end_seq: 16 bits The last sequence number that this block reports on plus one. Singh & Huang Standards Track [Page 4] RFC 7509 Post-Repair Non-RLE Loss Count May 2015 Post-repair loss count: 16 bits Total number of packets finally lost after applying one or more loss-repair methods e.g. FEC and/or retransmission during the actual sequence number range indicated by begin_seq and end_seq. This metric MUST NOT count the lost packets for which repair might still be possible. Note that this metric MUST measure only primary source RTP packets. Repaired loss count: 16 bits Total number of packets fully repaired after applying one or more loss-repair methods e.g. FEC and/or retransmission during the actual sequence number range indicated by begin_seq and end_seq. Note that this metric MUST measure only primary source RTP packets. 3.2 Example Usage The metrics defined in this report block are all measured at the RTP receiver. However the receiving endpoint can report the metrics in two different ways: 1) Cumulative report In this case implementations may set begin_seq to the first packet in the RTP session and it will remain fixed across all reports. Hence the "Post-repair loss count" and "Repaired loss count" respectively will correspond to "Cumulative post-repair loss count" and "Cumulative repaired loss count" in this case. These cumulative metrics when combined with the cumulative loss metrics reported in an RTCP RR (pre-repair) assist in calculating the "Still-to-be-repaired lost packets": Still-to-be-repaired lost packets = Cumulative number of packets lost - Cumulative post-repair loss count - Cumulative repaired loss count 2) Interval report Some implementations may align the begin_seq and end_seq number with the highest sequence numbers of consecutive RTCP RRs (RTCP interval). This is NOT RECOMMENDED as packets that are not yet repaired in this current RTCP interval and may be repaired in the subsequent intervals will not be reported. An interval report is illustrated in the following example: Singh & Huang Standards Track [Page 5] RFC 7509 Post-Repair Non-RLE Loss Count May 2015 Interval A: The extended highest sequence number received in RTCP RR is 20. Begin_seq is 10 and end_seq is 20. Interval B: The extended highest sequence number received in RTCP RR is 30. Begin_seq is 20 and end_seq is 30. If packets 17 and 19 are lost and not yet repaired in interval A and subsequently repaired in interval B they will not be reported because their sequence numbers do not belong in interval B. Therefore if implementations want these packets to be reported as repaired they MUST NOT align the begin_seq and end_seq to the RTCP intervals. Alternatively implementations may choose the begin_seq and end_seq numbers that cover several RTCP intervals. Additionally the reported range of sequence numbers may overlap with the previous report blocks so that the packets that were not yet repaired in one interval but were subsequently repaired or deemed unrepairable were reported in subsequent intervals. In this case the "Cumulative number of packets lost" cannot be easily compared with the post-repair metrics. However the sending endpoint can calculate the efficiency of the error resilience algorithm using the post-repair and repaired loss count respectively. 4. SDP Signaling [RFC3611] defines the use of SDP (Session Description Protocol) for signaling the use of RTCP XR blocks. However XR blocks MAY be used without prior signaling (see Section 5 of [RFC3611]). 4.1. SDP rtcp-xr-attrib Attribute Extension This session augments the SDP attribute "rtcp-xr" defined in Section 5.1 of [RFC3611] by providing an additional value of "xr-format" to signal the use of the report block defined in this document. The ABNF [RFC5234] syntax is as follows. xr-format =/ xr-prlr-block xr-prlr-block = "post-repair-loss-count" Singh & Huang Standards Track [Page 6] RFC 7509 Post-Repair Non-RLE Loss Count May 2015 4.2. Offer/Answer Usage When SDP is used in offer/answer context the SDP Offer/Answer usage defined in [RFC3611] for the unilateral "rtcp-xr" attribute parameters applies. For detailed usage of Offer/Answer for unilateral parameters refer to Section 5.2 of [RFC3611]. 5. Security Considerations This proposed RTCP XR block introduces no new security considerations beyond those described in [RFC3611]. This block does not provide per-packet statistics so the risk to confidentiality documented in Section 7 paragraph 3 of [RFC3611] does not apply. An attacker may put incorrect information in the Post-Repair Loss Count reports which will affect the performance of loss-repair mechanisms. Implementers should consider the guidance in [RFC7202] for using appropriate security mechanisms i.e. where security is a concern the implementation should apply encryption and authentication to the report block. For example this can be achieved by using the AVPF profile together with the Secure RTP profile as defined in [RFC3711]; an appropriate combination of the two profiles (an "SAVPF") is specified in [RFC5124]. However other mechanisms also exist (documented in [RFC7201]) and might be more suitable. 6. IANA Considerations New block types for RTCP XR are subject to IANA registration. For general guidelines on IANA considerations for RTCP XR refer to [RFC3611]. 6.1. New RTCP XR Block Type Value This document assigns the block type value 33 in the IANA "RTP Control Protocol Extended Reports (RTCP XR) Block Type Registry" to the "Post-Repair Loss Count Metrics Report Block". 6.2. New RTCP XR SDP Parameter This document also registers a new parameter "post-repair-loss-count" in the "RTP Control Protocol Extended Reports (RTCP XR) Session Description Protocol (SDP) Parameters Registry". 6.3. Contact Information for Registrations The contact information for the registrations is: RAI Area Directors <rai-ads@ietf.org> Singh & Huang Standards Track [Page 7] RFC 7509 Post-Repair Non-RLE Loss Count May 2015 7. References 7.1. Normative References [KEYWORDS] Bradner S. "Key words for use in RFCs to Indicate Requirement Levels" BCP 14 RFC 2119 DOI 10.17487/RFC2119 March 1997 <http://www.rfc-editor.org/info/rfc2119>. [RFC3550] Schulzrinne H. Casner S. Frederick R. and V. Jacobson "RTP: A Transport Protocol for Real-Time Applications" STD 64 RFC 3550 DOI 10.17487/RFC3550 July 2003 <http://www.rfc-editor.org/info/rfc3550>. [RFC3611] Friedman T. Ed. Caceres R. Ed. and A. Clark Ed. "RTP Control Protocol Extended Reports (RTCP XR)" RFC 3611 DOI 10.17487/RFC3611 November 2003 <http://www.rfc-editor.org/info/rfc3611>. [RFC3711] Baugher M. McGrew D. Naslund M. Carrara E. and K. Norrman "The Secure Real-time Transport Protocol (SRTP)" RFC 3711 DOI 10.17487/RFC3711 March 2004 <http://www.rfc-editor.org/info/rfc3711>. [RFC5124] Ott J. and E. Carrara "Extended Secure RTP Profile for Real-time Transport Control Protocol (RTCP)-Based Feedback (RTP/SAVPF)" RFC 5124 DOI 10.17487/RFC5124 February 2008 <http://www.rfc-editor.org/info/rfc5124>. [RFC5234] Crocker D. Ed. and P. Overell "Augmented BNF for Syntax Specifications: ABNF" STD 68 RFC 5234 DOI 10.17487/RFC5234 January 2008 <http://www.rfc-editor.org/info/rfc5234>. [RFC5725] Begen A. Hsu D. and M. Lague "Post-Repair Loss RLE Report Block Type for RTP Control Protocol (RTCP) Extended Reports (XRs)" RFC 5725 DOI 10.17487/RFC5725 February 2010 <http://www.rfc-editor.org/info/rfc5725>. Singh & Huang Standards Track [Page 8] RFC 7509 Post-Repair Non-RLE Loss Count May 2015 7.2. Informative References [RFC4588] Rey J. Leon D. Miyazaki A. Varsa V. and R. Hakenberg "RTP Retransmission Payload Format" RFC 4588 DOI 10.17487/RFC4588 July 2006 <http://www.rfc-editor.org/info/rfc4588>. [RFC5109] Li A. Ed. "RTP Payload Format for Generic Forward Error Correction" RFC 5109 DOI 10.17487/RFC5109 December 2007 <http://www.rfc-editor.org/info/rfc5109>. [RFC6390] Clark A. and B. Claise "Guidelines for Considering New Performance Metric Development" BCP 170 RFC 6390 DOI 10.17487/RFC6390 October 2011 <http://www.rfc-editor.org/info/rfc6390>. [RFC6709] Carpenter B. Aboba B. Ed. and S. Cheshire "Design Considerations for Protocol Extensions" RFC 6709 DOI 10.17487/RFC6709 September 2012 <http://www.rfc-editor.org/info/rfc6709>. [RFC6792] Wu Q. Ed. Hunt G. and P. Arden "Guidelines for Use of the RTP Monitoring Framework" RFC 6792 DOI 10.17487/RFC6792 November 2012 <http://www.rfc-editor.org/info/rfc6792>. [RFC7201] Westerlund M. and C. Perkins "Options for Securing RTP Sessions" RFC 7201 DOI 10.17487/RFC7201 April 2014 <http://www.rfc-editor.org/info/rfc7201>. [RFC7202] Perkins C. and M. Westerlund "Securing the RTP Framework: Why RTP Does Not Mandate a Single Media Security Solution" RFC 7202 DOI 10.17487/RFC7202 April 2014 <http://www.rfc-editor.org/info/rfc7202>. Singh & Huang Standards Track [Page 9] RFC 7509 Post-Repair Non-RLE Loss Count May 2015 Appendix A. Metrics Represented Using the Template from RFC 6390 a. Post-Repair RTP Packet Loss Count Metric * Metric Name: Post-Repair RTP Packet Loss Count Metric. * Metric Description: Total number of RTP packets still lost after loss-repair methods are applied. * Method of Measurement or Calculation: See the "Post-repair loss count" definition in Section 3.1. It is directly measured and must be measured for the primary source RTP packets with no further chance of repair. * Units of Measurement: This metric is expressed as a 16-bit unsigned integer value giving the number of RTP packets. * Measurement Point(s) with Potential Measurement Domain: It is measured at the receiving end of the RTP stream. * Measurement Timing: This metric relies on the sequence number interval to determine measurement timing. See the Cumulative and Interval reports defined in Section 3.2. * Use and Applications: These metrics are applicable to any RTP application especially those that use loss-repair mechanisms. See Section 1 for details. * Reporting Model: See RFC 3611. b. Repaired RTP Packet Loss Count Metric * Metric Name: Repaired RTP Packet Count Metric. * Metric Description: The number of RTP packets lost but repaired after applying loss-repair methods. * Method of Measurement or Calculation: See the "Repaired loss count" in Section 3.1. It is directly measured and must be measured for the primary source RTP packets with no further chance of repair. * Units of Measurement: This metric is expressed as a 16-bit unsigned integer value giving the number of RTP packets. * Measurement Point(s) with Potential Measurement Domain: It is measured at the receiving end of the RTP stream. Singh & Huang Standards Track [Page 10] RFC 7509 Post-Repair Non-RLE Loss Count May 2015 * Measurement Timing: This metric relies on the sequence number interval to determine measurement timing. See the Cumulative and Interval reports defined in Section 3.2. * Use and Applications: These metrics are applicable to any RTP application especially those that use loss-repair mechanisms. See Section 1 for details. * Reporting Model: See RFC 3611. Acknowledgments The authors would like to thank Roni Even Colin Perkins and Qin Wu for giving valuable comments and suggestions. Authors\' Addresses Rachel Huang Huawei 101 Software Avenue Yuhua District Nanjing 210012 China EMail: rachel.huang@huawei.com Varun Singh Aalto University School of Electrical Engineering Otakaari 5 A Espoo FIN 02150 Finland EMail: varun@comnet.tkk.fi URI: http://www.netlab.tkk.fi/~varun/ Singh & Huang Standards Track [Page 11]'), ('rfc7506_txt', 'Internet Engineering Task Force (IETF) K. Raza Request for Comments: 7506 Cisco Systems Inc. Updates: 4379 N. Akiya Category: Standards Track Big Switch Networks ISSN: 2070-1721 C. Pignataro Cisco Systems Inc. April 2015 IPv6 Router Alert Option for MPLS Operations Administration and Maintenance (OAM) Abstract RFC 4379 defines the MPLS Label Switched Path (LSP) Ping/Traceroute mechanism in which the Router Alert Option (RAO) MUST be set in the IP header of the MPLS Echo Request messages and may conditionally be set in the IP header of the MPLS Echo Reply messages depending on the Reply Mode used. While a generic "Router shall examine packet" Option Value is used for the IPv4 RAO there is no generic RAO value defined for IPv6 that can be used. This document allocates a new generic IPv6 RAO value that can be used by MPLS Operations Administration and Maintenance (OAM) tools including the MPLS Echo Request and MPLS Echo Reply messages for MPLS in IPv6 environments. Consequently it updates RFC 4379. The initial motivation to request an IPv6 RAO value for MPLS OAM comes from the MPLS LSP Ping/Traceroute. However this value is applicable to all MPLS OAM and not limited to MPLS LSP Ping/ Traceroute. Status of This Memo This is an Internet Standards Track document. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741. Information about the current status of this document any errata and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7506. Raza et al. Standards Track [Page 1] RFC 7506 MPLS OAM IPv6 Router Alert April 2015 Copyright Notice Copyright (c) 2015 IETF Trust and the persons identified as the document authors. All rights reserved. This document is subject to BCP 78 and the IETF Trust\'s Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License. Table of Contents 1. Introduction . . . . . . . . . . . . . . . . . . . . . . . . 2 2. Specification of Requirements . . . . . . . . . . . . . . . . 3 3. IPv6 RAO Value for MPLS OAM . . . . . . . . . . . . . . . . . 3 4. Updates to RFC 4379 . . . . . . . . . . . . . . . . . . . . . 3 5. IANA Considerations . . . . . . . . . . . . . . . . . . . . . 4 6. Security Considerations . . . . . . . . . . . . . . . . . . . 4 7. References . . . . . . . . . . . . . . . . . . . . . . . . . 4 7.1. Normative References . . . . . . . . . . . . . . . . . . 4 7.2. Informative References . . . . . . . . . . . . . . . . . 5 Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . . 5 Authors\' Addresses . . . . . . . . . . . . . . . . . . . . . . . 6 1. Introduction A commonly deployed MPLS OAM tool is specified in [RFC4379] "Detecting Multi-Protocol Label Switched (MPLS) Data Plane Failures" which is used to diagnose MPLS network data planes. This specification often referred to as "MPLS LSP Ping/Traceroute" [RFC4379] requires the use of the Router Alert Option (RAO) in the IP header. For example Section 4.3 of [RFC4379] states that the IP RAO MUST be set in the IP header of an MPLS Echo Request message. Similarly Section 4.5 of [RFC4379] states that the IP RAO MUST be set in the IP header of an MPLS Echo Reply message if the Reply Mode in the Echo Request is set to "Reply via an IPv4/IPv6 UDP packet with Router Alert". [RFC2113] defines a generic Option Value 0x0 for IPv4 RAO that is used in LSP Ping and LSP Traceroute for MPLS in IPv4 environments. This IPv4 RAO value of 0x0 is assigned to "Router shall examine packet". However currently there is no generic IPV6 RAO value defined that can be used in LSP Ping and LSP Traceroute for MPLS in Raza et al. Standards Track [Page 2] RFC 7506 MPLS OAM IPv6 Router Alert April 2015 IPv6 environments. Specifically [RFC2711] defined the Router Alert for a general IPv6 purpose but required the Value field in the RAO to indicate a specific reason for using the RAO. Because there is no defined value for MPLS LSP Ping/Traceroute use or for general use it is not possible for MPLS OAM tools to use the IPv6 Router Alert mechanism. As vendors are starting to implement MPLS on the IPv6 control plane (e.g. [LDP-IPV6]) there is a need to define and allocate such an Option Value for IPv6 in order to comply with [RFC4379]. This document defines a new IPv6 RAO value that can be used by MPLS OAM tools including the MPLS Echo Request and MPLS Echo Reply messages for MPLS in IPv6 environments. This document closes the gap discussed in the third paragraph of Section 3.4.2 in [RFC7439]. 2. Specification of Requirements The key words "MUST" "MUST NOT" "REQUIRED" "SHALL" "SHALL NOT" "SHOULD" "SHOULD NOT" "RECOMMENDED" "MAY" and "OPTIONAL" in this document are to be interpreted as described in [RFC2119]. 3. IPv6 RAO Value for MPLS OAM This document defines a new Option Value (69) for the IPv6 RAO to alert transit routers to examine the packet more closely for MPLS OAM purposes. This Option Value is used by any MPLS OAM application that requires their packets to be examined by a transit router. In the scope of this document this Option Value will be used by the MPLS Echo Request and MPLS Echo Reply for its IPv6 messages as is required by [RFC4379]. 4. Updates to RFC 4379 [RFC4379] specifies the use of the RAO in the IP header. Sections 4.3 and 4.5 of [RFC4379] are updated as follows: For every time in which the "Router Alert IP Option" is used the following text is appended: In case of an IPv4 header the generic IPv4 RAO value 0x0 [RFC2113] SHOULD be used. In case of an IPv6 header the IPv6 RAO value (69) allocated through this document for MPLS OAM MUST be used. Raza et al. Standards Track [Page 3] RFC 7506 MPLS OAM IPv6 Router Alert April 2015 5. IANA Considerations This document defines a new value (69) for the IPv6 RAO to alert transit routers to examine the packet more closely for MPLS OAM purposes. IANA has assigned a new code point under its "IPv6 Router Alert Option Values" registry defined by [RFC2711] updated by [RFC5350] and maintained in [IANA-IPv6-RAO]. The new code point is as follows: Value Description Reference ----- ------------------------------- --------------- 69 MPLS OAM RFC 7506 6. Security Considerations This document introduces no new security concerns in addition to what have already been captured in [RFC4379] and [RFC6398] the latter of which expands the security considerations of [RFC2113] and [RFC2711]. IPv6 packets containing the MPLS OAM RAO are encapsulated with an MPLS header and are not expected to be inspected by every label switched hop within an MPLS LSP. Consequently this value of the RAO will be processed by the appropriate router and is not subject to the problem of being ignored as described in Section 2.2 of [RFC7045]. 7. References 7.1. Normative References [RFC2119] Bradner S. "Key words for use in RFCs to Indicate Requirement Levels" BCP 14 RFC 2119 March 1997 <http://www.rfc-editor.org/info/rfc2119>. [RFC2711] Partridge C. and A. Jackson "IPv6 Router Alert Option" RFC 2711 October 1999 <http://www.rfc-editor.org/info/rfc2711>. [RFC4379] Kompella K. and G. Swallow "Detecting Multi-Protocol Label Switched (MPLS) Data Plane Failures" RFC 4379 February 2006 <http://www.rfc-editor.org/info/rfc4379>. [RFC5350] Manner J. and A. McDonald "IANA Considerations for the IPv4 and IPv6 Router Alert Options" RFC 5350 September 2008 <http://www.rfc-editor.org/info/rfc5350>. [RFC6398] Le Faucheur F. Ed. "IP Router Alert Considerations and Usage" BCP 168 RFC 6398 October 2011 <http://www.rfc-editor.org/info/rfc6398>. Raza et al. Standards Track [Page 4] RFC 7506 MPLS OAM IPv6 Router Alert April 2015 7.2. Informative References [IANA-IPv6-RAO] IANA "IPv6 Router Alert Option Values" <http://www.iana.org/assignments/ipv6-routeralert-values>. [LDP-IPV6] Asati R. Pignataro C. Raza K. Manral V. and R. Papneja "Updates to LDP for IPv6" Work in Progress draft-ietf-mpls-ldp-ipv6-17 February 2015. [RFC2113] Katz D. "IP Router Alert Option" RFC 2113 February 1997 <http://www.rfc-editor.org/info/rfc2113>. [RFC7045] Carpenter B. and S. Jiang "Transmission and Processing of IPv6 Extension Headers" RFC 7045 December 2013 <http://www.rfc-editor.org/info/rfc7045>. [RFC7439] George W. Ed. and C. Pignataro Ed. "Gap Analysis for Operating IPv6-Only MPLS Networks" RFC 7439 January 2015 <http://www.rfc-editor.org/info/rfc7439>. Acknowledgements The authors would like to thank George Swallow Ole Troan Bob Hinden Faisal Iqbal Mathew Janelle and Gregory Mirsky for their useful input. Raza et al. Standards Track [Page 5] RFC 7506 MPLS OAM IPv6 Router Alert April 2015 Authors\' Addresses Kamran Raza Cisco Systems Inc. 2000 Innovation Drive Kanata ON K2K-3E8 Canada EMail: skraza@cisco.com Nobo Akiya Big Switch Networks EMail: nobo.akiya.dev@gmail.com Carlos Pignataro Cisco Systems Inc. 7200-12 Kit Creek Road Research Triangle Park NC 27709 United States EMail: cpignata@cisco.com Raza et al. Standards Track [Page 6]'), ('rfc7502_txt', 'Internet Engineering Task Force (IETF) C. Davids Request for Comments: 7502 Illinois Institute of Technology Category: Informational V. Gurbani ISSN: 2070-1721 Bell Laboratories Alcatel-Lucent S. Poretsky Allot Communications April 2015 Methodology for Benchmarking Session Initiation Protocol (SIP) Devices: Basic Session Setup and Registration Abstract This document provides a methodology for benchmarking the Session Initiation Protocol (SIP) performance of devices. Terminology related to benchmarking SIP devices is described in the companion terminology document (RFC 7501). Using these two documents benchmarks can be obtained and compared for different types of devices such as SIP Proxy Servers Registrars and Session Border Controllers. The term "performance" in this context means the capacity of the Device Under Test (DUT) to process SIP messages. Media streams are used only to study how they impact the signaling behavior. The intent of the two documents is to provide a normalized set of tests that will enable an objective comparison of the capacity of SIP devices. Test setup parameters and a methodology are necessary because SIP allows a wide range of configurations and operational conditions that can influence performance benchmark measurements. Status of This Memo This document is not an Internet Standards Track specification; it is published for informational purposes. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741. Information about the current status of this document any errata and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7502. Davids et al. Informational [Page 1] RFC 7502 SIP Benchmarking Methodology April 2015 Copyright Notice Copyright (c) 2015 IETF Trust and the persons identified as the document authors. All rights reserved. This document is subject to BCP 78 and the IETF Trust\'s Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License. Davids et al. Informational [Page 2] RFC 7502 SIP Benchmarking Methodology April 2015 Table of Contents 1. Introduction . . . . . . . . . . . . . . . . . . . . . . . . 4 2. Terminology . . . . . . . . . . . . . . . . . . . . . . . . . 5 3. Benchmarking Topologies . . . . . . . . . . . . . . . . . . . 5 4. Test Setup Parameters . . . . . . . . . . . . . . . . . . . . 7 4.1. Selection of SIP Transport Protocol . . . . . . . . . . . 7 4.2. Connection-Oriented Transport Management . . . . . . . . 7 4.3. Signaling Server . . . . . . . . . . . . . . . . . . . . 7 4.4. Associated Media . . . . . . . . . . . . . . . . . . . . 8 4.5. Selection of Associated Media Protocol . . . . . . . . . 8 4.6. Number of Associated Media Streams per SIP Session . . . 8 4.7. Codec Type . . . . . . . . . . . . . . . . . . . . . . . 8 4.8. Session Duration . . . . . . . . . . . . . . . . . . . . 8 4.9. Attempted Sessions per Second (sps) . . . . . . . . . . . 8 4.10. Benchmarking Algorithm . . . . . . . . . . . . . . . . . 9 5. Reporting Format . . . . . . . . . . . . . . . . . . . . . . 11 5.1. Test Setup Report . . . . . . . . . . . . . . . . . . . . 11 5.2. Device Benchmarks for Session Setup . . . . . . . . . . . 12 5.3. Device Benchmarks for Registrations . . . . . . . . . . . 12 6. Test Cases . . . . . . . . . . . . . . . . . . . . . . . . . 13 6.1. Baseline Session Establishment Rate of the Testbed . . . 13 6.2. Session Establishment Rate without Media . . . . . . . . 13 6.3. Session Establishment Rate with Media Not on DUT . . . . 13 6.4. Session Establishment Rate with Media on DUT . . . . . . 14 6.5. Session Establishment Rate with TLS-Encrypted SIP . . . . 14 6.6. Session Establishment Rate with IPsec-Encrypted SIP . . . 15 6.7. Registration Rate . . . . . . . . . . . . . . . . . . . . 15 6.8. Re-registration Rate . . . . . . . . . . . . . . . . . . 16 7. Security Considerations . . . . . . . . . . . . . . . . . . . 16 8. References . . . . . . . . . . . . . . . . . . . . . . . . . 17 8.1. Normative References . . . . . . . . . . . . . . . . . . 17 8.2. Informative References . . . . . . . . . . . . . . . . . 17 Appendix A. R Code Component to Simulate Benchmarking Algorithm 18 Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . . 20 Authors\' Addresses . . . . . . . . . . . . . . . . . . . . . . . 21 Davids et al. Informational [Page 3] RFC 7502 SIP Benchmarking Methodology April 2015 1. Introduction This document describes the methodology for benchmarking Session Initiation Protocol (SIP) performance as described in the Terminology document [RFC7501]. The methodology and terminology are to be used for benchmarking signaling plane performance with varying signaling and media load. Media streams when used are used only to study how they impact the signaling behavior. This document concentrates on benchmarking SIP session setup and SIP registrations only. The Device Under Test (DUT) is a network intermediary that is RFC 3261 [RFC3261] capable and that plays the role of a registrar redirect server stateful proxy a Session Border Controller (SBC) or a B2BUA. This document does not require the intermediary to assume the role of a stateless proxy. Benchmarks can be obtained and compared for different types of devices such as a SIP proxy server Session Border Controllers (SBC) SIP registrars and a SIP proxy server paired with a media relay. The test cases provide metrics for benchmarking the maximum \'SIP Registration Rate\' and maximum \'SIP Session Establishment Rate\' that the DUT can sustain over an extended period of time without failures (extended period of time is defined in the algorithm in Section 4.10). Some cases are included to cover encrypted SIP. The test topologies that can be used are described in the Test Setup section. Topologies in which the DUT handles media as well as those in which the DUT does not handle media are both considered. The measurement of the performance characteristics of the media itself is outside the scope of these documents. Benchmark metrics could possibly be impacted by Associated Media. The selected values for Session Duration and Media Streams per Session enable benchmark metrics to be benchmarked without Associated Media. Session Setup Rate could possibly be impacted by the selected value for Maximum Sessions Attempted. The benchmark for Session Establishment Rate is measured with a fixed value for maximum Session Attempts. Finally the overall value of these tests is to serve as a comparison function between multiple SIP implementations. One way to use these tests is to derive benchmarks with SIP devices from Vendor-A derive a new set of benchmarks with similar SIP devices from Vendor-B and perform a comparison on the results of Vendor-A and Vendor-B. This document does not make any claims on the interpretation of such results. Davids et al. Informational [Page 4] RFC 7502 SIP Benchmarking Methodology April 2015 2. Terminology In this document the key words "MUST" "MUST NOT" "REQUIRED" "SHALL" "SHALL NOT" "SHOULD" "SHOULD NOT" "RECOMMENDED" "NOT RECOMMENDED" "MAY" and "OPTIONAL" are to be interpreted as described in BCP 14 conforming to [RFC2119] and indicate requirement levels for compliant implementations. RFC 2119 defines the use of these key words to help make the intent of Standards Track documents as clear as possible. While this document uses these keywords this document is not a Standards Track document. Terms specific to SIP [RFC3261] performance benchmarking are defined in [RFC7501]. 3. Benchmarking Topologies Test organizations need to be aware that these tests generate large volumes of data and consequently ensure that networking devices like hubs switches or routers are able to handle the generated volume. The test cases enumerated in Sections 6.1 to 6.6 operate on two test topologies: one in which the DUT does not process the media (Figure 1) and the other in which it does process media (Figure 2). In both cases the tester or Emulated Agent (EA) sends traffic into the DUT and absorbs traffic from the DUT. The diagrams in Figures 1 and 2 represent the logical flow of information and do not dictate a particular physical arrangement of the entities. Figure 1 depicts a layout in which the DUT is an intermediary between the two interfaces of the EA. If the test case requires the exchange of media the media does not flow through the DUT but rather passes directly between the two endpoints. Figure 2 shows the DUT as an intermediary between the two interfaces of the EA. If the test case requires the exchange of media the media flows through the DUT between the endpoints. Davids et al. Informational [Page 5] RFC 7502 SIP Benchmarking Methodology April 2015 +--------+ Session +--------+ Session +--------+ | | Attempt | | Attempt | | | |------------>+ |------------>+ | | | | | | | | | Response | | Response | | | Tester +<------------| DUT +<------------| Tester | | (EA) | | | | (EA) | | | | | | | +--------+ +--------+ +--------+ /|\\ /|\\ | Media (optional) | +==============================================+ Figure 1: DUT as an Intermediary End-to-End Media +--------+ Session +--------+ Session +--------+ | | Attempt | | Attempt | | | |------------>+ |------------>+ | | | | | | | | | Response | | Response | | | Tester +<------------| DUT +<------------| Tester | | (EA) | | | | (EA) | | |<===========>| |<===========>| | +--------+ Media +--------+ Media +--------+ (Optional) (Optional) Figure 2: DUT as an Intermediary Forwarding Media The test cases enumerated in Sections 6.7 and 6.8 use the topology in Figure 3 below. +--------+ Registration +--------+ | | request | | | |------------->+ | | | | | | | Response | | | Tester +<-------------| DUT | | (EA) | | | | | | | +--------+ +--------+ Figure 3: Registration and Re-registration Tests During registration or re-registration the DUT may involve backend network elements and data stores. These network elements and data stores are not shown in Figure 3 but it is understood that they will impact the time required for the DUT to generate a response. Davids et al. Informational [Page 6] RFC 7502 SIP Benchmarking Methodology April 2015 This document explicitly separates a registration test (Section 6.7) from a re-registration test (Section 6.8) because in certain networks the time to re-register may vary from the time to perform an initial registration due to the backend processing involved. It is expected that the registration tests and the re-registration test will be performed with the same set of backend network elements in order to derive a stable metric. 4. Test Setup Parameters 4.1. Selection of SIP Transport Protocol Test cases may be performed with any transport protocol supported by SIP. This includes but is not limited to TCP UDP TLS and websockets. The protocol used for the SIP transport protocol must be reported with benchmarking results. SIP allows a DUT to use different transports for signaling on either side of the connection to the EAs. Therefore this document assumes that the same transport is used on both sides of the connection; if this is not the case in any of the tests the transport on each side of the connection MUST be reported in the test-reporting template. 4.2. Connection-Oriented Transport Management SIP allows a device to open one connection and send multiple requests over the same connection (responses are normally received over the same connection that the request was sent out on). The protocol also allows a device to open a new connection for each individual request. A connection management strategy will have an impact on the results obtained from the test cases especially for connection-oriented transports such as TLS. For such transports the cryptographic handshake must occur every time a connection is opened. The connection management strategy i.e. use of one connection to send all requests or closing an existing connection and opening a new connection to send each request MUST be reported with the benchmarking result. 4.3. Signaling Server The Signaling Server is defined in the companion terminology document ([RFC7501] Section 3.2.2). The Signaling Server is a DUT. Davids et al. Informational [Page 7] RFC 7502 SIP Benchmarking Methodology April 2015 4.4. Associated Media Some tests require Associated Media to be present for each SIP session. The test topologies to be used when benchmarking DUT performance for Associated Media are shown in Figure 1 and Figure 2. 4.5. Selection of Associated Media Protocol The test cases specified in this document provide SIP performance independent of the protocol used for the media stream. Any media protocol supported by SIP may be used. This includes but is not limited to RTP and SRTP. The protocol used for Associated Media MUST be reported with benchmarking results. 4.6. Number of Associated Media Streams per SIP Session Benchmarking results may vary with the number of media streams per SIP session. When benchmarking a DUT for voice a single media stream is used. When benchmarking a DUT for voice and video two media streams are used. The number of Associated Media Streams MUST be reported with benchmarking results. 4.7. Codec Type The test cases specified in this document provide SIP performance independent of the media stream codec. Any codec supported by the EAs may be used. The codec used for Associated Media MUST be reported with the benchmarking results. 4.8. Session Duration The value of the DUT\'s performance benchmarks may vary with the duration of SIP sessions. Session Duration MUST be reported with benchmarking results. A Session Duration of zero seconds indicates transmission of a BYE immediately following a successful SIP establishment. Setting this parameter to the value \'0\' indicates that a BYE will be sent by the EA immediately after the EA receives a 200 OK to the INVITE. Setting this parameter to a time value greater than the duration of the test indicates that a BYE will never be sent. Setting this parameter to a time value greater than the duration of the test indicates that a BYE is never sent. 4.9. Attempted Sessions per Second (sps) The value of the DUT\'s performance benchmarks may vary with the Session Attempt Rate offered by the tester. Session Attempt Rate MUST be reported with the benchmarking results. Davids et al. Informational [Page 8] RFC 7502 SIP Benchmarking Methodology April 2015 The test cases enumerated in Sections 6.1 to 6.6 require that the EA is configured to send the final 2xx-class response as quickly as it can. This document does not require the tester to add any delay between receiving a request and generating a final response. 4.10. Benchmarking Algorithm In order to benchmark the test cases uniformly in Section 6 the algorithm described in this section should be used. A prosaic description of the algorithm and a pseudocode description are provided below and a simulation written in the R statistical language [Rtool] is provided in Appendix A. The goal is to find the largest value R a SIP Session Attempt Rate measured in sessions per second (sps) which the DUT can process with zero errors over a defined extended period. This period is defined as the amount of time needed to attempt N SIP sessions where N is a parameter of test at the attempt rate R. An iterative process is used to find this rate. The algorithm corresponding to this process converges to R. If the DUT vendor provides a value for R the tester can use this value. In cases where the DUT vendor does not provide a value for R or where the tester wants to establish the R of a system using local media characteristics the algorithm should be run by setting "r" the session attempt rate equal to a value of the tester\'s choice. For example the tester may initialize "r = 100" to start the algorithm and observe the value at convergence. The algorithm dynamically increases and decreases "r" as it converges to the maximum sps value for R. The dynamic increase and decrease rate is controlled by the weights "w" and "d" respectively. The pseudocode corresponding to the description above follows and a simulation written in the R statistical language is provided in Appendix A. Davids et al. Informational [Page 9] RFC 7502 SIP Benchmarking Methodology April 2015 ; ---- Parameters of test; adjust as needed N := 50000 ; Global maximum; once largest session rate has ; been established send this many requests before ; calling the test a success m := {...} ; Other attributes that affect testing such ; as media streams etc. r := 100 ; Initial session attempt rate (in sessions/sec). ; Adjust as needed (for example if DUT can handle ; thousands of calls in steady state set to ; appropriate value in the thousands). w := 0.10 ; Traffic increase weight (0 < w <= 1.0) d := max(0.10 w / 2) ; Traffic decrease weight ; ---- End of parameters of test proc find_R R = max_sps(r m N) ; Setup r sps each with m media ; characteristics until N sessions have been attempted. ; Note that if a DUT vendor provides this number the tester ; can use the number as a Session Attempt Rate R instead ; of invoking max_sps() end proc ; Iterative process to figure out the largest number of ; sps that we can achieve in order to setup n sessions. ; This function converges to R the Session Attempt Rate. proc max_sps(r m n) s := 0 ; session setup rate old_r := 0 ; old session setup rate h := 0 ; Return value R count := 0 ; Note that if w is small (say 0.10) and r is small ; (say <= 9) the algorithm will not converge since it ; uses floor() to increment r dynamically. It is best ; to start with the defaults (w = 0.10 and r >= 100). while (TRUE) { s := send_traffic(r m n) ; Send r sps with m media ; characteristics until n sessions have been attempted. if (s == n) { if (r > old_r) { old_r = r } else { count = count + 1 Davids et al. Informational [Page 10] RFC 7502 SIP Benchmarking Methodology April 2015 if (count >= 10) { # We\'ve converged. h := max(r old_r) break } } r := floor(r + (w * r)) } else { r := floor(r - (d * r)) d := max(0.10 d / 2) w := max(0.10 w / 2) } } return h end proc 5. Reporting Format 5.1. Test Setup Report SIP Transport Protocol = ___________________________ (valid values: TCP|UDP|TLS|SCTP|websockets|specify-other) (Specify if same transport used for connections to the DUT and connections from the DUT. If different transports used on each connection enumerate the transports used.) Connection management strategy for connection oriented transports DUT receives requests on one connection = _______ (Yes or no. If no DUT accepts a new connection for every incoming request sends a response on that connection and closes the connection.) DUT sends requests on one connection = __________ (Yes or no. If no DUT initiates a new connection to send out each request gets a response on that connection and closes the connection.) Session Attempt Rate _______________________________ (Session attempts/sec) (The initial value for "r" in benchmarking algorithm in Section 4.10.) Session Duration = _________________________________ (In seconds) Davids et al. Informational [Page 11] RFC 7502 SIP Benchmarking Methodology April 2015 Total Sessions Attempted = _________________________ (Total sessions to be created over duration of test) Media Streams per Session = _______________________ (number of streams per session) Associated Media Protocol = _______________________ (RTP|SRTP|specify-other) Codec = ____________________________________________ (Codec type as identified by the organization that specifies the codec) Media Packet Size (audio only) = __________________ (Number of bytes in an audio packet) Establishment Threshold time = ____________________ (Seconds) TLS ciphersuite used (for tests involving TLS) = ________________________ (e.g. TLS_RSA_WITH_AES_128_CBC_SHA) IPsec profile used (For tests involving IPsec) = _____________________ 5.2. Device Benchmarks for Session Setup Session Establishment Rate "R" = __________________ (sessions per second) Is DUT acting as a media relay? (yes/no) = _________ 5.3. Device Benchmarks for Registrations Registration Rate = ____________________________ (registrations per second) Re-registration Rate = ____________________________ (registrations per second) Notes = ____________________________________________ (List any specific backend processing required or other parameters that may impact the rate) Davids et al. Informational [Page 12] RFC 7502 SIP Benchmarking Methodology April 2015 6. Test Cases 6.1. Baseline Session Establishment Rate of the Testbed Objective: To benchmark the Session Establishment Rate of the Emulated Agent (EA) with zero failures. Procedure: 1. Configure the DUT in the test topology shown in Figure 1. 2. Set Media Streams per Session to 0. 3. Execute benchmarking algorithm as defined in Section 4.10 to get the baseline Session Establishment Rate. This rate MUST be recorded using any pertinent parameters as shown in the reporting format of Section 5.1. Expected Results: This is the scenario to obtain the maximum Session Establishment Rate of the EA and the testbed when no DUT is present. The results of this test might be used to normalize test results performed on different testbeds or simply to better understand the impact of the DUT on the testbed in question. 6.2. Session Establishment Rate without Media Objective: To benchmark the Session Establishment Rate of the DUT with no Associated Media and zero failures. Procedure: 1. Configure a DUT according to the test topology shown in Figure 1 or Figure 2. 2. Set Media Streams per Session to 0. 3. Execute benchmarking algorithm as defined in Section 4.10 to get the Session Establishment Rate. This rate MUST be recorded using any pertinent parameters as shown in the reporting format of Section 5.1. Expected Results: Find the Session Establishment Rate of the DUT when the EA is not sending media streams. 6.3. Session Establishment Rate with Media Not on DUT Objective: To benchmark the Session Establishment Rate of the DUT with zero failures when Associated Media is included in the benchmark test but the media is not running through the DUT. Davids et al. Informational [Page 13] RFC 7502 SIP Benchmarking Methodology April 2015 Procedure: 1. Configure a DUT according to the test topology shown in Figure 1. 2. Set Media Streams per Session to 1. 3. Execute benchmarking algorithm as defined in Section 4.10 to get the session establishment rate with media. This rate MUST be recorded using any pertinent parameters as shown in the reporting format of Section 5.1. Expected Results: Session Establishment Rate results obtained with Associated Media with any number of media streams per SIP session are expected to be identical to the Session Establishment Rate results obtained without media in the case where the DUT is running on a platform separate from the Media Relay. 6.4. Session Establishment Rate with Media on DUT Objective: To benchmark the Session Establishment Rate of the DUT with zero failures when Associated Media is included in the benchmark test and the media is running through the DUT. Procedure: 1. Configure a DUT according to the test topology shown in Figure 2. 2. Set Media Streams per Session to 1. 3. Execute benchmarking algorithm as defined in Section 4.10 to get the Session Establishment Rate with media. This rate MUST be recorded using any pertinent parameters as shown in the reporting format of Section 5.1. Expected Results: Session Establishment Rate results obtained with Associated Media may be lower than those obtained without media in the case where the DUT and the Media Relay are running on the same platform. It may be helpful for the tester to be aware of the reasons for this degradation although these reasons are not parameters of the test. For example the degree of performance degradation may be due to what the DUT does with the media (e.g. relaying vs. transcoding) the type of media (audio vs. video vs. data) and the codec used for the media. There may also be cases where there is no performance impact if the DUT has dedicated media-path hardware. 6.5. Session Establishment Rate with TLS-Encrypted SIP Objective: To benchmark the Session Establishment Rate of the DUT with zero failures when using TLS-encrypted SIP signaling. Davids et al. Informational [Page 14] RFC 7502 SIP Benchmarking Methodology April 2015 Procedure: 1. If the DUT is being benchmarked as a proxy or B2BUA then configure the DUT in the test topology shown in Figure 1 or Figure 2. 2. Configure the tester to enable TLS over the transport being used during benchmarking. Note the ciphersuite being used for TLS and record it in Section 5.1. 3. Set Media Streams per Session to 0 (media is not used in this test). 4. Execute benchmarking algorithm as defined in Section 4.10 to get the Session Establishment Rate with TLS encryption. Expected Results: Session Establishment Rate results obtained with TLS-encrypted SIP may be lower than those obtained with plaintext SIP. 6.6. Session Establishment Rate with IPsec-Encrypted SIP Objective: To benchmark the Session Establishment Rate of the DUT with zero failures when using IPsec-encrypted SIP signaling. Procedure: 1. Configure a DUT according to the test topology shown in Figure 1 or Figure 2. 2. Set Media Streams per Session to 0 (media is not used in this test). 3. Configure tester for IPsec. Note the IPsec profile being used for IPsec and record it in Section 5.1. 4. Execute benchmarking algorithm as defined in Section 4.10 to get the Session Establishment Rate with encryption. Expected Results: Session Establishment Rate results obtained with IPsec-encrypted SIP may be lower than those obtained with plaintext SIP. 6.7. Registration Rate Objective: To benchmark the maximum registration rate the DUT can handle over an extended time period with zero failures. Procedure: 1. Configure a DUT according to the test topology shown in Figure 3. 2. Set the registration timeout value to at least 3600 seconds. 3. Each register request MUST be made to a distinct Address of Record (AoR). Execute benchmarking algorithm as defined in Davids et al. Informational [Page 15] RFC 7502 SIP Benchmarking Methodology April 2015 Section 4.10 to get the maximum registration rate. This rate MUST be recorded using any pertinent parameters as shown in the reporting format of Section 5.1. For example the use of TLS or IPsec during registration must be noted in the reporting format. In the same vein any specific backend processing (use of databases authentication servers etc.) SHOULD be recorded as well. Expected Results: Provides a maximum registration rate. 6.8. Re-registration Rate Objective: To benchmark the re-registration rate of the DUT with zero failures using the same backend processing and parameters used during Section 6.7. Procedure: 1. Configure a DUT according to the test topology shown in Figure 3. 2. Execute the test detailed in Section 6.7 to register the endpoints with the registrar and obtain the registration rate. 3. After at least 5 minutes of performing Step 2 but no more than 10 minutes after Step 2 has been performed re-register the same AoRs used in Step 3 of Section 6.7. This will count as a re-registration because the SIP AoRs have not yet expired. Expected Results: Note the rate obtained through this test for comparison with the rate obtained in Section 6.7. 7. Security Considerations Documents of this type do not directly affect the security of the Internet or corporate networks as long as benchmarking is not performed on devices or systems connected to production networks. Security threats and how to counter these in SIP and the media layer is discussed in RFC 3261 RFC 3550 and RFC 3711 and various other documents. This document attempts to formalize a set of common methodology for benchmarking performance of SIP devices in a lab environment. Davids et al. Informational [Page 16] RFC 7502 SIP Benchmarking Methodology April 2015 8. References 8.1. Normative References [RFC2119] Bradner S. "Key words for use in RFCs to Indicate Requirement Levels" BCP 14 RFC 2119 March 1997 <http://www.rfc-editor.org/info/rfc2119>. [RFC7501] Davids C. Gurbani V. and S. Poretsky "Terminology for Benchmarking Session Initiation Protocol (SIP) Devices: Basic Session Setup and Registration" RFC 7501 April 2015 <http://www.rfc-editor.org/info/rfc7501>. 8.2. Informative References [RFC3261] Rosenberg J. Schulzrinne H. Camarillo G. Johnston A. Peterson J. Sparks R. Handley M. and E. Schooler "SIP: Session Initiation Protocol" RFC 3261 June 2002 <http://www.rfc-editor.org/info/rfc3261>. [Rtool] R Development Core Team "R: A Language and Environment for Statistical Computing" R Foundation for Statistical Computing Vienna Austria ISBN 3-900051-07-0 2011 <http://www.R-project.org>. Davids et al. Informational [Page 17] RFC 7502 SIP Benchmarking Methodology April 2015 Appendix A. R Code Component to Simulate Benchmarking Algorithm # Copyright (c) 2015 IETF Trust and the persons identified as # authors of the code. All rights reserved. # # Redistribution and use in source and binary forms with or # without modification are permitted provided that the following # conditions are met: # # The author of this code is Vijay K. Gurbani. # # - Redistributions of source code must retain the above copyright # notice this list of conditions and # the following disclaimer. # # - Redistributions in binary form must reproduce the above # copyright notice this list of conditions and the following # disclaimer in the documentation and/or other materials # provided with the distribution. # # - Neither the name of Internet Society IETF or IETF Trust # nor the names of specific contributors may be used to # endorse or promote products derived from this software # without specific prior written permission. # # THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND # CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES # INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF # MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE # DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR # CONTRIBUTORS BE LIABLE FOR ANY DIRECT INDIRECT # INCIDENTAL SPECIAL EXEMPLARY OR CONSEQUENTIAL DAMAGES # (INCLUDING BUT NOT LIMITED TO PROCUREMENT OF SUBSTITUTE # GOODS OR SERVICES; LOSS OF USE DATA OR PROFITS; OR BUSINESS # INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY # WHETHER IN CONTRACT STRICT LIABILITY OR TORT (INCLUDING # NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE # OF THIS SOFTWARE EVEN IF ADVISED OF THE POSSIBILITY OF SUCH # DAMAGE. w = 0.10 d = max(0.10 w / 2) DUT_max_sps = 460 # Change as needed to set the max sps value # for a DUT Davids et al. Informational [Page 18] RFC 7502 SIP Benchmarking Methodology April 2015 # Returns R given r (initial session attempt rate). # E.g. assume that a DUT handles 460 sps in steady state # and you have saved this code in a file simulate.r. Then # start an R session and do the following: # # > source("simulate.r") # > find_R(100) # ... debug output omitted ... # [1] 458 # # Thus the max sps that the DUT can handle is 458 sps which is # close to the absolute maximum of 460 sps the DUT is specified to # do. find_R <- function(r) { s = 0 old_r = 0 h = 0 count = 0 # Note that if w is small (say 0.10) and r is small # (say <= 9) the algorithm will not converge since it # uses floor() to increment r dynamically. It is best # to start with the defaults (w = 0.10 and r >= 100). cat("r old_r w d \\n") while (TRUE) { cat(r \' \' old_r \' \' w \' \' d \'\\n\') s = send_traffic(r) if (s == TRUE) { # All sessions succeeded if (r > old_r) { old_r = r } else { count = count + 1 if (count >= 10) { # We\'ve converged. h = max(r old_r) break } } r = floor(r + (w * r)) } Davids et al. Informational [Page 19] RFC 7502 SIP Benchmarking Methodology April 2015 else { r = floor(r - (d * r)) d = max(0.10 d / 2) w = max(0.10 w / 2) } } h } send_traffic <- function(r) { n = TRUE if (r > DUT_max_sps) { n = FALSE } n } Acknowledgments The authors would like to thank Keith Drage and Daryl Malas for their contributions to this document. Dale Worley provided an extensive review that led to improvements in the documents. We are grateful to Barry Constantine William Cerveny and Robert Sparks for providing valuable comments during the documents\' last calls and expert reviews. Al Morton and Sarah Banks have been exemplary working group chairs; we thank them for tracking this work to completion. Tom Taylor provided an in-depth review and subsequent comments on the benchmarking convergence algorithm in Section 4.10. Davids et al. Informational [Page 20] RFC 7502 SIP Benchmarking Methodology April 2015 Authors\' Addresses Carol Davids Illinois Institute of Technology 201 East Loop Road Wheaton IL 60187 United States Phone: +1 630 682 6024 EMail: davids@iit.edu Vijay K. Gurbani Bell Laboratories Alcatel-Lucent 1960 Lucent Lane Rm 9C-533 Naperville IL 60566 United States Phone: +1 630 224 0216 EMail: vkg@bell-labs.com Scott Poretsky Allot Communications 300 TradeCenter Suite 4680 Woburn MA 08101 United States Phone: +1 508 309 2179 EMail: sporetsky@allot.com Davids et al. Informational [Page 21]')]